@page "/"

@inject FlashCardsDbService Database

<h1 class="text-center">Flash Cards</h1>

@if (!userAuth)
{
    <h2 class="text-center">Please Sign-in to Create FlashCard Decks</h2>
}
else if (userAuth && !isUserReady)
{
    <div class="text-center">
        <div class="text-center">
            <ol style="margin-left:auto; margin-right:auto; font-size:1.4em">
                <li>Create <strong>flash cards</strong> to help you study</li>
                <li>Review your own flashcards in a quiz format to <strong>test your progress</strong></li>
                <li>
                    Take a section of a <strong>practice exam</strong> from the language section of old
                    <strong>Standarized tests</strong> from elementary school through college entrance exams
                    and beyond!
                </li>
            </ol>
        </div>
        <button class="btn btn-primary" style="margin-left:auto; margin-right:auto" @onclick="@(() => isUserReady = !isUserReady)">
            Start studying!
        </button>
    </div>
}
else
{
    <div class="text-center" style="margin-left:auto; margin-right:auto">
        <TabControl>
            <TabPage Text="Create and use flashcards to study" Size="large">
                <UserPage />
            </TabPage>
            <TabPage Text="Test your knowledge with a pre-made quiz" Size="large">
                <MatThemeProvider Theme="theme">
                    <WordQuiz />
                </MatThemeProvider>
            </TabPage>
        </TabControl>
    </div>
}

@code {


    protected bool userAuth = false;
    protected bool isUserReady = false;
    public MatTheme theme = new MatTheme()
    {
        Primary = MatThemeColors.Orange._500.Value,
        Secondary = MatThemeColors.Blue._800.Value,
        Background = MatThemeColors.LightBlue._300.Value,
        OnSurface = MatThemeColors.Amber._200.Value,
        Surface = MatThemeColors.BlueGrey._300.Value
    };

    protected override Task OnInitializedAsync()
    {
        userAuth = Database.HasUser;
        return base.OnInitializedAsync();

    }

}
